// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZenithWepAPI.Context;

#nullable disable

namespace ZenithWepAPI.Migrations
{
    [DbContext(typeof(ZenithContext))]
    partial class ZenithContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZenithWepAPI.Domains.AnaliseProjeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescricaoGeral")
                        .HasColumnType("TEXT");

                    b.Property<double>("GestoresIdeais")
                        .HasColumnType("FLOAT");

                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("JuniorsIdeais")
                        .HasColumnType("FLOAT");

                    b.Property<double>("PlenosIdeais")
                        .HasColumnType("FLOAT");

                    b.Property<double>("SenioresIdeais")
                        .HasColumnType("FLOAT");

                    b.HasKey("Id");

                    b.HasIndex("IdProjeto")
                        .IsUnique();

                    b.ToTable("AnaliseProjeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.CargoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Cargo")
                        .HasColumnType("VARCHAR(120)");

                    b.Property<int>("NivelCargo")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("CargoUsuario");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.ColaboradorTechSkills", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdColaborador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTechSkill")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdTechSkill");

                    b.ToTable("ColaboradorTechSkills");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Equipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("QtdIntegrantes")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdProjeto")
                        .IsUnique();

                    b.ToTable("Equipe");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.EquipeColaboradores", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdColaborador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEquipe")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdEquipe");

                    b.ToTable("EquipeColaboradores");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Funcionalidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Funcionalidade");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.FuncionalidadesProjeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdFuncionalidade")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdFuncionalidade");

                    b.HasIndex("IdProjeto");

                    b.ToTable("FuncionalidadesProjeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdTipoProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NivelAnalise")
                        .HasColumnType("INT");

                    b.Property<int?>("NivelProjeto")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoProjeto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Risco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AreaRisco")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("DescricaoRisco")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdAnaliseProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTechSkill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ImpactoRisco")
                        .HasColumnType("INT");

                    b.Property<int?>("NivelRisco")
                        .HasColumnType("INT");

                    b.Property<int?>("ProbabilidadeRisco")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdAnaliseProjeto");

                    b.HasIndex("IdTechSkill");

                    b.ToTable("Risco");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.TechSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Skill")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("TechSkill");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Tecnologia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeTecnologia")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Tecnologia");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.TecnologiasProjeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTecnologia")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdProjeto");

                    b.HasIndex("IdTecnologia");

                    b.ToTable("TecnologiasProjeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.TipoProjeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoProjeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodRecupSenha")
                        .HasColumnType("VARCHAR(4)");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdCargoUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NivelSenioridade")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("IdCargoUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.AnaliseProjeto", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.Projeto", "Projeto")
                        .WithOne("Analise")
                        .HasForeignKey("ZenithWepAPI.Domains.AnaliseProjeto", "IdProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Colaborador", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.ColaboradorTechSkills", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZenithWepAPI.Domains.TechSkill", "TechSkill")
                        .WithMany()
                        .HasForeignKey("IdTechSkill")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("TechSkill");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Equipe", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.Projeto", "Projeto")
                        .WithOne("Equipe")
                        .HasForeignKey("ZenithWepAPI.Domains.Equipe", "IdProjeto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.EquipeColaboradores", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZenithWepAPI.Domains.Equipe", "Equipe")
                        .WithMany("EquipeColaboradores")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.FuncionalidadesProjeto", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.Funcionalidade", "Funcionalidade")
                        .WithMany()
                        .HasForeignKey("IdFuncionalidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZenithWepAPI.Domains.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("IdProjeto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Funcionalidade");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Projeto", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.TipoProjeto", "TipoProjeto")
                        .WithMany()
                        .HasForeignKey("IdTipoProjeto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZenithWepAPI.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoProjeto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Risco", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.AnaliseProjeto", "AnaliseProjeto")
                        .WithMany("Riscos")
                        .HasForeignKey("IdAnaliseProjeto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZenithWepAPI.Domains.TechSkill", "TechSkill")
                        .WithMany()
                        .HasForeignKey("IdTechSkill")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AnaliseProjeto");

                    b.Navigation("TechSkill");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.TecnologiasProjeto", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("IdProjeto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZenithWepAPI.Domains.Tecnologia", "Tecnologia")
                        .WithMany()
                        .HasForeignKey("IdTecnologia")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Projeto");

                    b.Navigation("Tecnologia");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Usuario", b =>
                {
                    b.HasOne("ZenithWepAPI.Domains.CargoUsuario", "CargoUsuario")
                        .WithMany()
                        .HasForeignKey("IdCargoUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CargoUsuario");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.AnaliseProjeto", b =>
                {
                    b.Navigation("Riscos");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Equipe", b =>
                {
                    b.Navigation("EquipeColaboradores");
                });

            modelBuilder.Entity("ZenithWepAPI.Domains.Projeto", b =>
                {
                    b.Navigation("Analise");

                    b.Navigation("Equipe");
                });
#pragma warning restore 612, 618
        }
    }
}
